global
	log /dev/log	local0
	log /dev/log	local1 notice
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        timeout tunnel        3600s
        timeout http-keep-alive  1s
        timeout http-request    15s
        timeout queue           30s
        timeout tarpit          60s
        default-server inter 3s rise 2 fall 3
	errorfile 400 /usr/local/etc/haproxy/errors/400.http
	errorfile 403 /usr/local/etc/haproxy/errors/403.http
	errorfile 408 /usr/local/etc/haproxy/errors/408.http
	errorfile 500 /usr/local/etc/haproxy/errors/500.http
	errorfile 502 /usr/local/etc/haproxy/errors/502.http
	errorfile 503 /usr/local/etc/haproxy/errors/503.http
	errorfile 504 /usr/local/etc/haproxy/errors/504.http

	frontend localhost
    bind *:80
    bind *:443 ssl crt /etc/ssl/myselfsigned.pem
    mode http

    acl api_weather_loop hdr(host) -i 127.0.0.1
    use_backend weather_local if api_weather_loop

    acl api_weather_local hdr(host) -i localhost
    use_backend weather_local if api_weather_local

    acl api_weather_loop hdr(host) -i localdev.infotamia.com
    use_backend weather_local if api_weather_loop

    #replace this ip with your host machine ip
    acl api_weather_host hdr(host) -i 192.168.1.104
    use_backend weather_local if api_weather_host


    backend weather_local
    mode http
    balance roundrobin
    option forwardfor
    option httpchk HEAD / HTTP/1.1\r\nHost:localhost
    option http-server-close
    server web01 weather_backend_1:8080/
    http-request add-header X-Forwarded-Proto https if { ssl_fc }


